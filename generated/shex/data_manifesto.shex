BASE <https://w3id.org/linkml/manifesto/>
PREFIX csvw: <http://www.w3.org/ns/csvw#>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX void: <http://rdfs.org/ns/void#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX pav: <http://purl.org/pav/>
PREFIX schema1: <http://schema.org/>
PREFIX bibo: <http://purl.org/ontology/bibo/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:Uriorcurie IRI

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

<ContentCheck> CLOSED {
    (  $<ContentCheck_tes> (  <contains_regexp> @linkml:String ? ;
          <minimum_line_number> @linkml:Integer ? ;
          <maximum_line_number> @linkml:Integer ?
       ) ;
       rdf:type [ <ContentCheck> ] ?
    )
}

<DataPackage> CLOSED {
    (  $<DataPackage_tes> (  &<Information_tes> ;
          rdf:type [ <Information> ] ? ;
          dcat:distribution @<DataResource> * ;
          <rules> @<Rule> * ;
          <parent> @<DataPackage> ? ;
          <alternate_parents> @<DataPackage> *
       ) ;
       rdf:type [ void:Dataset ]
    )
}

<DataResource> CLOSED {
    (  $<DataResource_tes> (  &<Information_tes> ;
          rdf:type [ <Information> ] ? ;
          <path> @linkml:String ? ;
          dcterms:format @linkml:String ? ;
          dcat:mediaType @linkml:String ? ;
          <encoding> @linkml:String ? ;
          dcat:byteSize @linkml:Integer ? ;
          <hash> @linkml:String ? ;
          <md5> @linkml:String ? ;
          <sha256> @linkml:String ? ;
          csvw:dialect @linkml:String ? ;
          <parent> @<DataResource> ? ;
          <alternate_parents> @<DataResource> *
       ) ;
       rdf:type [ dcat:Distribution ]
    )
}

<FormatDialect> CLOSED {
    (  $<FormatDialect_tes> (  <comment_prefix> @linkml:String ? ;
          <delimiter> @linkml:String ? ;
          <double_quote> @linkml:String ? ;
          <header> @linkml:String ? ;
          <quote_char> @linkml:String ?
       ) ;
       rdf:type [ <FormatDialect> ] ?
    )
}

<Information>  (
    @<DataPackage> OR @<DataResource>
)

<Information_struct> {
    (  $<Information_tes> (  dcat:downloadURL @linkml:Uri ? ;
          dcterms:license @linkml:String ? ;
          dcterms:title @linkml:String ? ;
          dcterms:description @linkml:String ? ;
          dcterms:conformsTo @linkml:Uriorcurie ? ;
          <conforms_to_schema> @linkml:Uriorcurie ? ;
          <conforms_to_class> @linkml:Uriorcurie ? ;
          pav:version @linkml:String ? ;
          schema1:inLanguage @linkml:String ? ;
          dcterms:publisher @linkml:Uriorcurie ? ;
          dcat:keyword @linkml:String * ;
          dcterms:issued @linkml:Datetime ? ;
          pav:createdBy @linkml:Uriorcurie ? ;
          pav:createdOn @linkml:Datetime ? ;
          bibo:status @linkml:Uriorcurie ? ;
          owl:deprecated @linkml:Boolean ? ;
          <compression> @<CompressionTypeEnum> ? ;
          prov:wasDerivedFrom @linkml:String ? ;
          dcat:landingPage @linkml:String ? ;
          <test_roles> @<TestRole> * ;
          <parent> @<Information> ? ;
          <alternate_parents> @<Information> *
       ) ;
       rdf:type [ <Information> ]
    )
}

<Rule> CLOSED {
    (  $<Rule_tes> (  <preconditions> @<RulePrecondition> * ;
          <postconditions> @<RulePostcondition> *
       ) ;
       rdf:type [ <Rule> ] ?
    )
}

<RulePostcondition> CLOSED {
    (  $<RulePostcondition_tes> (  dcterms:format @linkml:String ? ;
          dcterms:conformsTo @linkml:Uriorcurie ? ;
          <compression> @<CompressionTypeEnum> ? ;
          dcat:keyword @linkml:String *
       ) ;
       rdf:type [ <RulePostcondition> ] ?
    )
}

<RulePrecondition> CLOSED {
    (  $<RulePrecondition_tes> (  <basename_regexp> @linkml:String ? ;
          <dirname_regexp> @linkml:String ? ;
          <path_regexp> @linkml:String ? ;
          <final_suffix> @linkml:String ? ;
          <has_suffix> @linkml:String ? ;
          <has_content> @<ContentCheck> ?
       ) ;
       rdf:type [ <RulePrecondition> ] ?
    )
}


